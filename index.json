[{"content":"","date":"111124-01-11","externalUrl":null,"permalink":"/tags/cpp/","section":"Tags","summary":"","title":"Cpp","type":"tags"},{"content":"","date":"111124-01-11","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"111124-01-11","externalUrl":null,"permalink":"/posts/","section":"时间","summary":"","title":"时间","type":"posts"},{"content":"欢迎来到我的网站！我很高兴你的来访。\n如果你遇见[[内容]]均指文章名称，需要自行搜索，才不是我懒得搞了呢😒。 ","date":"111124-01-11","externalUrl":null,"permalink":"/","section":"欢迎来到 Blowfish ！","summary":"","title":"欢迎来到 Blowfish ！","type":"page"},{"content":"","date":"111124-01-11","externalUrl":null,"permalink":"/tags/%E9%93%BE%E8%A1%A8/","section":"Tags","summary":"","title":"链表","type":"tags"},{"content":"这是链表，啥东西都没有。\n回头或许会写东西。。\n","date":"111124-01-11","externalUrl":null,"permalink":"/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/","section":"时间","summary":"","title":"链表","type":"posts"},{"content":"","date":"131327-01-11","externalUrl":null,"permalink":"/tags/uit/","section":"Tags","summary":"","title":"UIT","type":"tags"},{"content":" 啪！很突然就开始考核了，所幸时间相对充裕，但内容过多。。\nUIT2024寒假考核1 # 考核范围：现有成员+二次纳新（Java组除外）\n学习专业基础课程《数据结构》（整本书内容） 链表学生管理系统 命令行应用 需具备基础菜单功能 使用链表完成一份学生管理系统，自主设计学生数据元素； 要求能增加、删除、查询指定条件（学生姓名、性别、年龄等）的学生、显示全部学生数据，保存全部学生数据到文件（txt），并且二次运行时不会丢失数据信息算法组与C++组要求使用C++，其他组C/C++；C++组另需使用OOP对其所实现的链表进行封装 需手动实现链表数据结构，禁止使用STL等现成库 要求提交源码（单个文件），会进行统一查重，并安排时间进行线上腾讯会议答辩（解释程序，依据个人数据结构的学习进度提问） 可以自行添加细节，其余所遇到的疑问请自行搜索，并掌握其内容 ==注意事项：本次考核重在考核基础编码能力与数据结构的学习进度，禁止代码抄袭，二次纳新的同学若有疑问积极提问。== 截止日期：1月19日\n答辩时间：1月21日（若遇特殊情况请事先说明）\n接下来的内容包含剧透内容！！！ 请经过自行思考再进行观看！！！ 1. 考核要求 # 信息概要：\n学 数据结构 整本书 [[链表]]学生管理系统 禁用STL 增加、删除 查询、显示 保存TXT文件 类型: 姓名、性别、年龄、Other 既然禁用STL 我是不是可以把STL库原内容复制过来🤓👆\n2. 框架整体 # 2.1 安全输入 # 方法一：string安全输入 # string input; getline(cin,input); if(input==\u0026#34;add\u0026#34;){ //TODO }else if(input==\u0026#34;\u0026#34;){ //TODO } 方法二：控制台程序的命令行参数输入 # int main(int argc,char* argv[]){ //使用示例 cout\u0026lt;\u0026lt;argc\u0026lt;\u0026lt;endl; cout\u0026lt;\u0026lt;\u0026#34;各个参数\u0026#34;\u0026lt;\u0026lt;endl; for (int i=0;i\u0026lt;argc;++i) cout\u0026lt;\u0026lt;argv[i]\u0026lt;\u0026lt;endl; //再自行做个检测 } 方法三：检查输入 # void clearInput() {/*清除错误状态*/ cin.clear();/*辅助函数，用于清理输入流*/ cin.ignore(numeric_limits\u0026lt;streamsize\u0026gt;::max(), \u0026#39;\\n\u0026#39;); /*忽略错误输入*/ printf(\u0026#34;非法输入，请重新输入！\\n\u0026#34;); } if(cin.fail()||非目标条件){ clearInput(); } 2.2 链表结构 # //侧重结构 typedef struct STU{ string name; string sex; int age; STU* next; }STU; //侧重抽象，但简单好用(确信 //欸，我有一个大胆的想法🤓👆 typedef struct STU{ int value; struct STU* next; }STU; ","date":"131327-01-11","externalUrl":null,"permalink":"/posts/uit2024%E5%AF%92%E5%81%87test1/","section":"时间","summary":"","title":"UIT2024寒假1","type":"posts"},{"content":"","date":"131327-01-11","externalUrl":null,"permalink":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"Tags","summary":"","title":"数据结构","type":"tags"},{"content":"","date":"131327-01-11","externalUrl":null,"permalink":"/tags/%E8%80%83%E6%A0%B8/","section":"Tags","summary":"","title":"考核","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]